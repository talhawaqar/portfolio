{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Isotope Item\n**/\n(function (window, factory) {\n  // universal module definition\n\n  /* jshint strict: false */\n\n  /*globals define, module, require */\n  if (typeof define == 'function' && define.amd) {\n    // AMD\n    define(['outlayer/outlayer'], factory);\n  } else if ((typeof module === \"undefined\" ? \"undefined\" : _typeof(module)) == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory(require('outlayer'));\n  } else {\n    // browser global\n    window.Isotope = window.Isotope || {};\n    window.Isotope.Item = factory(window.Outlayer);\n  }\n})(window, function factory(Outlayer) {\n  'use strict'; // -------------------------- Item -------------------------- //\n  // sub-class Outlayer Item\n\n  function Item() {\n    Outlayer.Item.apply(this, arguments);\n  }\n\n  var proto = Item.prototype = Object.create(Outlayer.Item.prototype);\n  var _create = proto._create;\n\n  proto._create = function () {\n    // assign id, used for original-order sorting\n    this.id = this.layout.itemGUID++;\n\n    _create.call(this);\n\n    this.sortData = {};\n  };\n\n  proto.updateSortData = function () {\n    if (this.isIgnored) {\n      return;\n    } // default sorters\n\n\n    this.sortData.id = this.id; // for backward compatibility\n\n    this.sortData['original-order'] = this.id;\n    this.sortData.random = Math.random(); // go thru getSortData obj and apply the sorters\n\n    var getSortData = this.layout.options.getSortData;\n    var sorters = this.layout._sorters;\n\n    for (var key in getSortData) {\n      var sorter = sorters[key];\n      this.sortData[key] = sorter(this.element, this);\n    }\n  };\n\n  var _destroy = proto.destroy;\n\n  proto.destroy = function () {\n    // call super\n    _destroy.apply(this, arguments); // reset display, #741\n\n\n    this.css({\n      display: ''\n    });\n  };\n\n  return Item;\n});","map":null,"metadata":{},"sourceType":"module"}